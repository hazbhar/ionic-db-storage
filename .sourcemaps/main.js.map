{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/services/dbstorage.service.ts","../../src/pages/home/home.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 109;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 109\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 150;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 150\n// module chunks = 0","import { Injectable } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite';\nimport { Storage } from '@ionic/storage';\n\n@Injectable()\nexport class DBStorage {\n\n    private sqlite: SQLite;\n    private database: SQLiteObject;\n    private isOpen: boolean = false;\n    private value: any = '';\n\n    public constructor(\n        public platform: Platform,\n        private storage: Storage\n    ) {\n        platform.ready().then(() => {\n            // Is not cordova == web PWA\n            if (!platform.is('cordova')) {\n                // do nothing     \n            } else {\n                // device\n                this.openDB().then(() => {\n                    console.log('db opened OK');\n                });\n            }\n        });\n    }\n\n    openDB() {\n        let promise = new Promise((resolve, reject) => {\n            if (!this.isOpen) {\n                this.sqlite = new SQLite();\n                this.sqlite.create({ name: \"data.db\", location: \"default\" })\n                    .then((db: SQLiteObject) => {\n                        this.database = db;\n                        this.database.executeSql(\"CREATE TABLE IF NOT EXISTS datalist (key TEXT, value TEXT)\", [])\n                            .then(() => {\n                                console.log('Executed create SQL');\n                                this.isOpen = true;\n                                resolve(this.isOpen);\n                            })\n                            .catch(e => {\n                                console.log(e)\n                                this.isOpen = false;\n                                reject(this.isOpen);\n                            });\n                    });\n            } else {\n                resolve(this.isOpen);\n            }\n        });\n        return promise;\n    }\n\n    getValue(key: string) {\n        let promise = new Promise((resolve, reject) => {\n            this.platform.ready().then(() => {\n                // Is not cordova == web PWA (no device)\n                if (!this.platform.is('cordova')) {\n                    this.storage.get(key).then((val) => {\n                        this.value = val;\n                        resolve(this.value);\n                    }).catch(() => {\n                        reject('no platform error pwa');\n                    });\n                } else {\n                    // device \n                    this.openDB().then(() => {\n                        let select = \"SELECT * FROM datalist where key ='\" + key + \"' \";\n                        this.database.executeSql(select, []).then((data) => {\n                            let value = '';\n                            if (data.rows.length > 0) {\n                                value = data.rows.item(0).value;\n                            }\n                            resolve(value);\n                        }, (error) => {\n                        }).catch(() => {\n                            reject('no platform error sqlite pwa');\n                        });\n                    });\n                }\n            }).catch(() => {\n                reject('no platform.error');\n            });\n        });\n        return promise;\n    }\n\n    setValue(key: string, value: string) {\n\n        this.platform.ready().then(() => {\n            // Is not cordova == web PWA\n            if (!this.platform.is('cordova')) {\n                this.storage.set(key, value);\n            } else {\n                // device \n                this.openDB().then(() => {\n                    let select = \"SELECT * FROM datalist where key ='\" + key + \"' \";\n                    this.database.executeSql(select, []).then((data) => {\n                        if (data.rows.length > 0) {\n                            // if key exists -> update\n                            this.database.executeSql(\"UPDATE datalist SET value = ? WHERE key = ? \", [value, key]).then((data) => {\n                                console.log('update successful');\n                            }, (error) => {\n                                console.log('setValue. update error');\n                                console.log(error);\n                            });\n                        } else {\n                            // else -> insert new key \n                            this.database.executeSql(\"INSERT INTO datalist (key, value) VALUES (?, ?)\", [key, value]).then((data) => {\n                                console.log('insert successful');\n                            }, (error) => {\n                                console.log('setValue. insert error');\n                                console.log(error);\n                            });\n                        }\n                    }, (error) => {\n                        console.log('error setValue.select: ' + error);\n                    });\n                });\n            }\n        });\n    }\n\n    removeKey(key: string) {\n\n        this.platform.ready().then(() => {\n            // Is not cordova == web PWA\n            if (!this.platform.is('cordova')) {\n                this.storage.remove(key);\n            } else {\n                // device \n                this.openDB().then(() => {\n                    // delete key \n                    this.database.executeSql(\"DELETE FROM datalist WHERE key ='\" + key + \"'\", []).then((data) => {\n                        console.log('delete successful');\n                    }, (error) => {\n                        console.log('delete error');\n                        console.log(error);\n                    });\n                });\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/dbstorage.service.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { DBStorage } from \"../../services/dbstorage.service\";\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  constructor(\n    public navCtrl: NavController,\n    private dbstorage: DBStorage\n  ) {\n  }\n\n  ionViewDidEnter() {\n\n    // set a key/value\n    this.dbstorage.setValue('name', 'Cindy');\n\n    // Or to get a key/value pair\n    this.dbstorage.getValue('name').then((val) => {\n      console.log('getValue: ' + val);\n    });\n\n    // remove key/value\n    this.dbstorage.removeKey('name');\n\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SQLite } from '@ionic-native/sqlite';\nimport { IonicStorageModule } from '@ionic/storage';\n\nimport {DBStorage} from \"../services/dbstorage.service\";\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp),\n    IonicStorageModule.forRoot()\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}, \n    SQLite, DBStorage \n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = HomePage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts"],"sourceRoot":""}